/* This is to be mostly for setting properties that affect layout. */
/* Use styles.css for setting colours etc.                         */
/* svg sizing will be carried out in JS depending on the size of containing elements */

html {
  touch-action: none;
}

body {
  position:fixed;
  height: 100%;
  width: 100%;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: auto;
}

#viewport {
  height: 100%;
  width: 100%;
}

.shape.circle {
  border-radius: 50% 50%;
}

.shape.square {
  margin: 2%;
}

.rotate-me {
  position: fixed;
  height: calc(100% + 4em);
  transform: rotateZ(-90deg);
  pointer-events: none;
}

.tooltip {
  text-align: center;
}

.hide {
  display: none;
}

@media (orientation: portrait) {
  #main {
    display: flex;
    flex-direction: column;
    width: 100%;
    height: 100%;
  }

  #numerals, #shapes {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 50%;
  }

  #numerals {
    order: 2;
  }

  .number-selector {
    height: 8%;
    width: 90%;
  }

  #fraction {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 90%;
    height: 100%;
  }

  .fraction-bar {
    height: 5%;
    width: 50%;
    min-height: 10px;
  }

  .number-big {
    font-size: 15vh;
  }

  #shapes {
    order: 1;
  }

  .shape-selector, .shape-quantity {
    height: 8%;
    width: 90%;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .shape-selector {

  }


  .shape-display {
    display: flex;
    flex-direction:column;
    justify-content: center;
    align-items: center;
    height: 82%;
    width: 100%;
  }

  .shape-container {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
  }

  .shape {
    width: fit-content;
    height: fit-content;
  }

  .shape svg {
    max-height: fit-content;
    max-width: fit-content;
  }

  #shapes button {
    height: 4vh;
    width: 4vh;
  }

  path {
    pointer-events: none;
  }

}
